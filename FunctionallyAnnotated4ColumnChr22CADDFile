                                                              ## In the Command Line: ##

# Unzip and slice to isolate Chr22 #
# Create "Head" files that are simpler to handle #

brew install xsv
gunzip -c whole_genome_SNVs_inclAnno.tsv.gz | gawk'BEGIN{Ch=""}{if($1~"#"){H[FNR]=$0;nh++}else{if($1!=Ch){Ch=$1;Out="hg19_CADD_SNVs_inclAnno_chr"$1".txt";for(i=1;i<=nh;i++){printH[i] >Out}}; print $0 > Out}}' -
head -3000000 hg19_CADD_SNVs_inclAnno_chr22.txt | sed 's/\t/,/g' > hg19_CADD_SNVs_inclAnno_chr22_h3M.csv
cut -f 1-4 hg19_CADD_SNVs_inclAnno_chr22.txt > hg19_CADD_SNVs_inclAnno_chr22_F1-4.txt

# For now, we will use the first 4 columns of the Ch22 file (hg19_CADD_SNVs_inclAnno_chr22_F1-4.txt) for less memory intensive work #

                                                                     ## In R: ##

rm(list=ls())
setwd("~/Desktop/Chromosome22")
install.packages("data.table")
library(data.table)
install.packages("tidyverse")
library(tidyverse)
chr224col3mil <- fread("/Volumes/HZU/CADD/hg19/chr22F1-43m.txt")
clinvar <- fread("/Volumes/HZU/CADD/hg19/clinvar_20220528.vcf")
chr224col3mil$`#Chrom` <- as.character(chr224col3mil$`#Chrom`)
left_join(chr224col3mil, clinvar, by = c('#Chrom' = '#CHROM', 'Pos' = 'POS', 'Ref' = 'REF', 'Alt' = 'ALT'))
Clinvarcadd4c3m <- left_join(chr224col3mil, clinvar, by = c('#Chrom' = '#CHROM', 'Pos' = 'POS', 'Ref' = 'REF', 'Alt' = 'ALT'))

# Addition of ClinVar database to 4-column, 3-million row Chr22 CADD file complete

# Now, slice other functional annotation files. We will then isolate the Chr22 sub-section of each functional annotation file to add to the Clinvarcadd4cf table #

                                                              ## In the Command Line: ##

gzip -k hg19_Eigen_coding_04092016.txt
gunzip -c hg19_Eigen_coding_04092016.txt.gz | gawk 'BEGIN{Ch=""}{if($1~"#"){H[FNR]=$0;nh++}else{if($1!=Ch){Ch=$1;Out="hg19_Eigen"$1".txt";for(i=1;i<=nh;i++){printH[i] >Out}}; print $0 > Out}}' -
gzip -k hg19_dbnsfp33a.txt
gunzip -c hg19_dbnsfp33a.txt.gz | gawk 'BEGIN{Ch=""}{if($1~"#"){H[FNR]=$0;nh++}else{if($1!=Ch){Ch=$1;Out="hg19_dbnsfp33a"$1".txt";for(i=1;i<=nh;i++){printH[i] >Out}}; print $0 > Out}}' -

# Look at column names for the chr22-isolated functional annotated files in order to prepare for the left_join we will do in R

head -10 hg19_Eigen22.txt
head -10 hg19_dbnsfp33a22.txt
head -10 hg19_Eigen22.txt > hg19_Eigen22.tsv
head -10 hg19_dbnsfp33a22.txt > hg19_dbnsfp33a22.tsv

# The files have no headers for any of the columns, so let's add some and check if everything is okay.

echo -e "#Chrom\tPos\tPos2\tRef\tAlt" | cat - hg19_Eigen22.txt > headers_hg19_Eigen22.txt
echo -e "#Chrom\tPos\tPos2\tRef\tAlt" | cat - hg19_dbnsfp33a22.txt > headers_hg19_dbnsfp33a22.txt
head -10 headers_hg19_Eigen22.txt
head -10 headers_hg19_dbnsfp33a22.txt

                                                                     ## In R: ##
                                                                     
Eigen <- fread("/Volumes/HZM/FAOVRDB/hg19/humandb/headers_hg19_Eigen22.txt")
View(Eigen)
dbnsfp33a <- fread("/Volumes/HZM/FAOVRDB/hg19/humandb/headers_hg19_dbnsfp33a22.txt")
View(dbnsfp33a)
Clinvarcadd4c3m$`#Chrom` <- as.character(Clinvarcadd4c3m$`#Chrom`)
Eigen$`#Chrom` <- as.character(Eigen$`#Chrom`)
EigenandClinVar <- left_join(Clinvarcadd4c3m, Eigen, by = c('#Chrom', 'Pos', 'Ref', 'Alt'))

#We have now added the Eigen functional annotations to the table containing the Chr22 CADD file and the ClinVar file.

dbnsfp33a$`#Chrom` <- as.character(dbnsfp33a$`#Chrom`)
ClinVarEigendbnsfp33a <- left_join(EigenandClinVar, dbnsfp33a, by = c('#Chrom', 'Pos', 'Ref', 'Alt'))

#We have now added the dbnsfp33a functional annotations to the CADD chr2 data in addition to the Eigen + ClinVar data.
                                                                     
# Now we check if all the data is NA (no matches) or if there are matches. If there are matches, how many?

noNAs <- na.omit(ClinVarEigendbnsfp33a)

#Data frame is empty - this shows that there are no rows that contain no NAs.
# This does not mean they are all NA however; code below shows that there are quite a few matches (13,975) with one of the functional annotation datasets (Eigen, which represent rows Pos2.x to V22.x).

sum(is.na(ClinVarEigendbnsfp33a$ID)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$QUAL)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$FILTER)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$INFO)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$Pos2.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V6.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V7.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V8.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V9.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V10.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V11.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V12.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V13.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V14.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V15.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V16.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V17.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V18.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V19.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V20.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V21.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$V22.x)) #2,986,023 are NA, 13,975 have values.
sum(is.na(ClinVarEigendbnsfp33a$Pos2.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V6.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V7.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V8.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V9.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V10.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V11.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V12.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V13.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V14.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V15.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V16.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V17.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V18.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V19.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V20.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V21.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V22.y)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V23)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V24)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V25)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V26)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V27)) #All 2,999,998 are NA
sum(is.na(ClinVarEigendbnsfp33a$V28)) #All 2,999,998 are NA

# There can be duplications of the ID due to matching values from different functional annotation databases. How do we prevent duplicates?

